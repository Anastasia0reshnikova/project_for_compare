Сравнение Assert JUnit и Assert-J

                                                             Assert JUnit                                        Assert-J
ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ:

- Функциональная полнота                    | Достаточна на начальном этаме автоматизации       | Простой иструмент с разнообразыми проверками,
                                            | Прост в использовании                             | расширающий возможности фреймворка JUnit
- Функциональная корректность               | Выполняет основные функции                        | Выполняет как основные, так и есть дополнительные фун-ции
- Функциональная целесообразность           | Достаточна                                        | Полезна для удобства и расширения проверок

НЕФУНКЦИАОНАЛЬНЫЕ ТРЕБОВАНИЯ:

Уровень производительности:
- Временные характеристики                  | Хорошие                                           | Хорошие
- Использование ресурсов                    | Быстрый инструмент                                | Быстрый инструмент
- Потенциальности возможности               | Не достаточны для более сложных assert-ов         | Широкий выбор assert-ов на все случаи
                                                                                                  + расширение уже имеющихся в JUnit

Совместимость:
- Сосуществование                           | Это часть фремворка JUnit                         | Есть
- Интероперабельность                       | Есть                                              | Есть

Удобство использования:
- Определимость пригодности                 | Удобен на начальном этапе автоматизации           | Очень простой и удобный инструмент,
                                                                                                  полезен как начинающему автоматизатору,
                                                                                                  так и продвинотому
- Изучаемость                               | Прост в изучении                                  | Прост в изучении, есть актуальная документация
                                                                                                  с примерами + примеры от пользователей
- Управляемость                             | Легко строить проверки                            | Легко строить assert-ы - стиль цепочки,
                                                                                                  позволяет один assert, но с несколькими проверками сразу
- Защищенность от ошибки пользователя       | Защищен (предположение)                           | Защищен (предположение)
- Эстетика пользовательского интерфейса     | Визуально удобен, но порой есть ощущение          | Визуально - это цепочка проверок,
                                            | перегруженности теста assert-ами                  | удобная для восприятия
- Доступность                               | Доступен (часть фремворка JUnit)                  | Доступен

Переносимость:
- Адаптируемость                            | Легко (часть фремворка JUnit)                     | Легко
- Устанавливаемость                         | Легко (часть фремворка JUnit)                     | Легко
- Взаимозаменяемость                        | Да (есть альтернативные инстументы)               | Да (есть альтернативные инстументы)

Защищенность:
- Конфиденциальность                        | Нет                                               | Нет
- Целостность                               | Да                                                | Да
- Неподдельность                            | Есть альтернативы на его основе                   | Есть альтернативы
- Отслеживаемость                           | Есть                                              | Есть
- Подлинность                               | Да                                                | Да

Надежность:
- Завершенность                             | В процессе разработки                             | В процессе разработки
- Готовность                                | В процессе разработки                             | В процессе разработки
- Отказоустойчивость                        | Нет (предположение)                               | Нет (предположение)
- Восстанавливаемость                       | Есть (предположение)                              | Есть (предположение)

ВЫВОД:
(больше касается ощущений в опыте использования)

Assert JUnit = часть фрейморка JUnit, простой инстумент, не трубющий дополнительных библиотек, так как ужн встроен.
Удобен на начальном этаме автоматизации, ограниценные возможности assert-ов, по ощущениям, этого не достаточно, когда
необходимы более быстрые и красивые assert-ы. В какой-то момент упираешься в его возможности и очень хочется дополнительных функций,
которые пусть и будут спрятаны "под капотом".

Assert-J = стороння библиотека с Assert-ами. Легко устанавливается в проект. Есть документация с примерами, а так же примеры пользоватеклей.
Поддерживает стиль цепочки в assert-ах, что позволяет внутри одного assert-a делать сразу несколько проверок. Есть более шировки возможности,
позволяющие не писать дополнительные методы, все делается "под капотом". Широки выбор работы со списками и объектами, позволяющий
делать интересные проверки без лишнего кода.
